<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="harmony.stateservice.StateserviceApplicationTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-02-13T05:06:07" hostname="DESKTOP-F2JKAL3" time="5.008">
  <properties/>
  <testcase name="contextLoads()" classname="harmony.stateservice.StateserviceApplicationTests" time="5.008"/>
  <system-out><![CDATA[14:05:51.880 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [harmony.stateservice.StateserviceApplicationTests]: StateserviceApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:05:52.346 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration harmony.stateservice.StateserviceApplication for test class harmony.stateservice.StateserviceApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2024-02-13T14:05:55.164+09:00  INFO 67504 --- [    Test worker] h.s.StateserviceApplicationTests         : Starting StateserviceApplicationTests using Java 17.0.7 with PID 67504 (started by 82109 in C:\develop\smilegate\severDev5th\state\remember\src\backend\state-service\stateservice)
2024-02-13T14:05:55.167+09:00  INFO 67504 --- [    Test worker] h.s.StateserviceApplicationTests         : No active profile set, falling back to 1 default profile: "default"
2024-02-13T14:05:57.849+09:00  INFO 67504 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-13T14:05:57.851+09:00  INFO 67504 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-02-13T14:05:57.919+09:00  INFO 67504 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2024-02-13T14:05:58.539+09:00  INFO 67504 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-13T14:05:58.540+09:00  INFO 67504 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-02-13T14:05:58.598+09:00  INFO 67504 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 57 ms. Found 0 Redis repository interfaces.
2024-02-13T14:05:59.176+09:00  INFO 67504 --- [    Test worker] faultConfiguringBeanFactoryPostProcessor : No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2024-02-13T14:05:59.224+09:00  INFO 67504 --- [    Test worker] faultConfiguringBeanFactoryPostProcessor : No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2024-02-13T14:05:59.765+09:00  INFO 67504 --- [    Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=8373381a-0379-3afe-b103-101d0a03336c
2024-02-13T14:06:06.369+09:00  INFO 67504 --- [    Test worker] o.s.i.endpoint.EventDrivenConsumer       : Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2024-02-13T14:06:06.370+09:00  INFO 67504 --- [    Test worker] o.s.i.channel.PublishSubscribeChannel    : Channel 'application.errorChannel' has 1 subscriber(s).
2024-02-13T14:06:06.372+09:00  INFO 67504 --- [    Test worker] o.s.i.endpoint.EventDrivenConsumer       : started bean '_org.springframework.integration.errorLogger'
2024-02-13T14:06:06.572+09:00  INFO 67504 --- [    Test worker] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [10.99.14.176:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-channelEventGroupState-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = channelEventGroupState
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2024-02-13T14:06:07.114+09:00  INFO 67504 --- [    Test worker] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.6.1
2024-02-13T14:06:07.118+09:00  INFO 67504 --- [    Test worker] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 5e3c2b738d253ff5
2024-02-13T14:06:07.118+09:00  INFO 67504 --- [    Test worker] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1707800767110
2024-02-13T14:06:07.127+09:00  INFO 67504 --- [    Test worker] fkaConsumerFactory$ExtendedKafkaConsumer : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] Subscribed to topic(s): channelEvent
2024-02-13T14:06:07.147+09:00  INFO 67504 --- [    Test worker] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [10.99.14.176:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sessionEventGroup-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sessionEventGroup
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2024-02-13T14:06:07.176+09:00  INFO 67504 --- [    Test worker] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.6.1
2024-02-13T14:06:07.176+09:00  INFO 67504 --- [    Test worker] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 5e3c2b738d253ff5
2024-02-13T14:06:07.177+09:00  INFO 67504 --- [    Test worker] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1707800767176
2024-02-13T14:06:07.178+09:00  INFO 67504 --- [    Test worker] fkaConsumerFactory$ExtendedKafkaConsumer : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] Subscribed to topic(s): sessionEvent
2024-02-13T14:06:07.219+09:00  INFO 67504 --- [    Test worker] h.s.StateserviceApplicationTests         : Started StateserviceApplicationTests in 14.263 seconds (process running for 19.766)
2024-02-13T14:06:09.070+09:00  INFO 67504 --- [ntainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] Cluster ID: tTuzViQKRqKdIr45uGOm_w
2024-02-13T14:06:09.070+09:00  INFO 67504 --- [ntainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] Cluster ID: tTuzViQKRqKdIr45uGOm_w
2024-02-13T14:06:09.074+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] Discovered group coordinator 10.99.14.176:9092 (id: 2147482646 rack: null)
2024-02-13T14:06:09.074+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] Discovered group coordinator 10.99.14.176:9092 (id: 2147482646 rack: null)
2024-02-13T14:06:09.084+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] (Re-)joining group
2024-02-13T14:06:09.084+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] (Re-)joining group
2024-02-13T14:06:09.164+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] Request joining group due to: need to re-join with the given member-id: consumer-sessionEventGroup-2-0c10dafc-c3f5-4f30-8056-c786a9189862
2024-02-13T14:06:09.164+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] Request joining group due to: need to re-join with the given member-id: consumer-channelEventGroupState-1-40af6153-3a5a-47a8-abc8-084a68492382
2024-02-13T14:06:09.166+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-13T14:06:09.166+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-13T14:06:09.166+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] (Re-)joining group
2024-02-13T14:06:09.166+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] (Re-)joining group
2024-02-13T14:06:10.240+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] Successfully joined group with generation Generation{generationId=99, memberId='consumer-channelEventGroupState-1-40af6153-3a5a-47a8-abc8-084a68492382', protocol='range'}
2024-02-13T14:06:10.240+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] Successfully joined group with generation Generation{generationId=101, memberId='consumer-sessionEventGroup-2-0c10dafc-c3f5-4f30-8056-c786a9189862', protocol='range'}
2024-02-13T14:06:10.448+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] Successfully synced group in generation Generation{generationId=101, memberId='consumer-sessionEventGroup-2-0c10dafc-c3f5-4f30-8056-c786a9189862', protocol='range'}
2024-02-13T14:06:10.448+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] Successfully synced group in generation Generation{generationId=99, memberId='consumer-channelEventGroupState-1-40af6153-3a5a-47a8-abc8-084a68492382', protocol='range'}
2024-02-13T14:06:10.462+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] Notifying assignor about the new Assignment(partitions=[sessionEvent-0])
2024-02-13T14:06:10.462+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] Notifying assignor about the new Assignment(partitions=[channelEvent-0])
2024-02-13T14:06:10.479+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] Adding newly assigned partitions: sessionEvent-0
2024-02-13T14:06:10.479+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] Adding newly assigned partitions: channelEvent-0
2024-02-13T14:06:10.548+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-channelEventGroupState-1, groupId=channelEventGroupState] Setting offset for partition channelEvent-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.99.14.176:9092 (id: 1001 rack: null)], epoch=0}}
2024-02-13T14:06:10.548+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-sessionEventGroup-2, groupId=sessionEventGroup] Setting offset for partition sessionEvent-0 to the committed offset FetchPosition{offset=68, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[10.99.14.176:9092 (id: 1001 rack: null)], epoch=0}}
2024-02-13T14:06:10.552+09:00  INFO 67504 --- [ntainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : channelEventGroupState: partitions assigned: [channelEvent-0]
2024-02-13T14:06:10.552+09:00  INFO 67504 --- [ntainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : sessionEventGroup: partitions assigned: [sessionEvent-0]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
