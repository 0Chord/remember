{"@timestamp":"2024-02-05T13:07:13.702+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.hibernate.dialect.Dialect",
                "message":"HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions."}
{"@timestamp":"2024-02-05T13:07:13.708+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.hibernate.orm.deprecation",
                "message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)"}
{"@timestamp":"2024-02-05T13:07:17.942+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
                "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2024-02-05T13:07:18.380+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext",
                "message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invalid mapping on handler class [harmony.communityservice.community.query.controller.UserQueryController]: public harmony.communityservice.common.dto.BaseResponse harmony.communityservice.community.query.controller.UserQueryController.search(java.lang.Long,java.lang.Long)"}
{"@timestamp":"2024-02-05T13:07:18.382+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.springframework.context.annotation.AnnotationConfigApplicationContext",
                "message":"Exception thrown from ApplicationListener handling ContextClosedEvent"}
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:144)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:457)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1128)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1091)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:113)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1184)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:638)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at harmony.communityservice.CommunityServiceApplication.main(CommunityServiceApplication.java:12)
{"@timestamp":"2024-02-05T13:08:36.874+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.hibernate.dialect.Dialect",
                "message":"HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions."}
{"@timestamp":"2024-02-05T13:08:36.879+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.hibernate.orm.deprecation",
                "message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)"}
{"@timestamp":"2024-02-05T13:08:38.717+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
                "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2024-02-05T13:08:39.154+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext",
                "message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invalid mapping on handler class [harmony.communityservice.community.query.controller.UserQueryController]: public harmony.communityservice.common.dto.BaseResponse harmony.communityservice.community.query.controller.UserQueryController.search(java.lang.Long,java.lang.Long)"}
{"@timestamp":"2024-02-05T13:08:39.157+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.springframework.context.annotation.AnnotationConfigApplicationContext",
                "message":"Exception thrown from ApplicationListener handling ContextClosedEvent"}
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:144)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:457)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1128)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1091)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:113)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1184)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:638)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at harmony.communityservice.CommunityServiceApplication.main(CommunityServiceApplication.java:12)
{"@timestamp":"2024-02-05T13:10:23.117+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.hibernate.dialect.Dialect",
                "message":"HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions."}
{"@timestamp":"2024-02-05T13:10:23.130+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.hibernate.orm.deprecation",
                "message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)"}
{"@timestamp":"2024-02-05T13:10:25.662+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
                "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2024-02-05T14:42:32.183+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.hibernate.dialect.Dialect",
                "message":"HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions."}
{"@timestamp":"2024-02-05T14:42:32.185+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.hibernate.orm.deprecation",
                "message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)"}
{"@timestamp":"2024-02-05T14:42:34.256+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
                "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2024-02-05T14:47:17.391+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.hibernate.dialect.Dialect",
                "message":"HHH000511: The 5.7.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions."}
{"@timestamp":"2024-02-05T14:47:17.399+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.hibernate.orm.deprecation",
                "message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)"}
{"@timestamp":"2024-02-05T14:47:19.438+0900", "level":"WARN",
                "service":"community-service", "trace": "", "apiAddr": "",
                "httpMethod":"","userId":"", "thread":"main", "logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
                "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
